
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Index</h2>
<div>
    <button id="loadBtn" class="btn btn-info">Load Data...</button>
    <button id="createBtn" class="btn btn-primary" data-toggle="modal" data-target="#CreateModal">Create Product</button>
</div>
<table class="table" id="myTable">
    <thead>
        <tr>
            <th>Id</th>
            <th>Name</th>
            <th>Price</th>
            <th>Quantity</th>
            <th>Total</th>
            <th>Shops</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @*<tr>
                <td class="productId">1</td>
                <td class="productName" contenteditable="false">Samsung</td>
                <td class="productPrice"><input type="number", value="300" disabled /></td>
                <td class="productQuantity"><input type="number", value="3" disabled/></td>
                <td class="productTotal">100</td>
            </tr>*@


    </tbody>
</table>

<!--Create Modal -->
<div class="modal fade" id="CreateModal" role="dialog">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Create Product</h4>
            </div>
            <div class="modal-body">

                <form id="form">
                    <div class="form-group">
                        <label for="productName">Product Name</label>
                        <input id="productName" class="form-control" type="text" value="" placeholder="Give Product Name" required />
                    </div>
                    <div class="form-group">
                        <label for="productPrice">Product Price</label>
                        <input id="productPrice" class="form-control" type="number" value="" placeholder="Give Product Price" required />
                    </div>
                    <div class="form-group">
                        <label for="productQuantity">Product Quantity</label>
                        <input id="productQuantity" class="form-control" type="number" value="" placeholder="Give Product Quantity" required />
                    </div>
                    <input type="submit" id="createFormBtn" class="btn btn-primary" value="Create Product" />
                </form>

            </div>
            <div class="modal-footer">

                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!--Edit Modal -->
<div class="modal" id="EditModal" role="dialog">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Edit Product</h4>
            </div>
            <div class="modal-body">

                <form id="Editform">

                    <input id="EditProductId" type="hidden" value="" />
                    <div class="form-group">
                        <label for="EditproductName">Edit Product Name</label>
                        <input id="EditproductName" class="form-control" type="text" value="" placeholder="Give Product Name" required />
                    </div>
                    <div class="form-group">
                        <label for="EditproductPrice">Edit Product Price</label>
                        <input id="EditproductPrice" class="form-control" type="number" value="" placeholder="Give Product Price" required />
                    </div>
                    <div class="form-group">
                        <label for="EditproductQuantity">Edit Product Quantity</label>
                        <input id="EditproductQuantity" class="form-control" type="number" value="" placeholder="Give Product Quantity" required />
                    </div>
                    <input type="submit" id="EditFormBtn" class="btn btn-primary" value="Edit Product" />
                </form>

            </div>
            <div class="modal-footer">

                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


@section MyScripts{
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>

    <script>

        $("#form").on("submit", function onCreateProductHandler(event) {
            event.preventDefault();
            $("#form").off("submit", onCreateProductHandler);
            $("#form").find("#createFormBtn").attr('disabled', true);
            let name = $("#productName").val();
            let price = $("#productPrice").val();
            let quantity = $("#productQuantity").val();

            let product = { name, price, quantity };

            console.log(product);

            let requestObject = JSON.stringify(product);

            let settings = {
                url: "https://localhost:44336/ProductAPI/CreateProduct",
                method: "POST",
                timeout: 0,
                headers: {
                    "Content-Type": "application/json"
                },
                data: requestObject //json....,
            };

            $.ajax(settings).done(function (product) {
                // give again the abilty to press submit button
                $("#form").on("submit", onCreateProductHandler);
                $('#CreateModal').modal('hide');
                onLoadDataHandler();
                let template = ShowAlertMessage("alert-success", "Success", `You have successfully created product with name ${product.Name}`);
                $("body").append(template);
                $("#form").find("#createFormBtn").attr('disabled', false);
            }).fail(function () {
                let template = ShowAlertMessage("alert-danger", "Fail!", "Unable to create product ...server...issues");
                $("body").append(template);
                $("#form").on("submit", onCreateProductHandler);
                $("#form").find("#createFormBtn").attr('disabled', false);
            });

        })




        $("#loadBtn").on("click", function onLoadDataHandler(event) {

            LoadSpinner();
            var settings = {
                "url": "https://localhost:44336/ProductAPI/GetAllProducts",
                "method": "GET",
                "timeout": 0,
            };

            $.ajax(settings).done(function (products) {
                $("table > tbody").empty();
                products.forEach(CreateRow);
            }).fail(function () {
                let template = ShowAlertMessage("alert-danger", "Fail!", "Unable to load data ...server...issues");
                $("body").append(template);

            });
        });



        function CreateRow(pro) {
            let template = `
                                                <tr>
                                                    <td class="productId">${pro.Id}</td>
                                                    <td class="productName" contenteditable="false">${pro.Name}</td>
                                                    <td class="productPrice"><input type="number" value=${pro.Price} disabled /></td>
                                                    <td class="productQuantity"><input type="number" value=${pro.Quantity} disabled/></td>
                                                    <td class="productTotal">${CalculateTotal(pro.Price, pro.Quantity)}</td>
                                                    <td>
                                                            <ul>
                                                                <li>${pro.Title}</li>
                                                            </ul>
                                                    </td>
                                                    <td>
                                                        <button onclick="onEditProductHandler(this,${pro.Id})" class="productEdit btn btn-success">Edit</button>
                                                        <button onclick="onDeleteProductHandler(this,${pro.Id})" class="productDelete btn btn-danger">Delete</button>

                                                    </td>
                                                </tr>
                                                `
            // add template in dom
            let ele = $(template);

            $("table > tbody").append(ele);


        }

        // seperation of concerns
        function CalculateTotal(price, quantity) {
            return price * quantity;
        }






        //// Handler for Delete
        function onDeleteProductHandler(e, id) {

            var settings = {
                "url": "https://localhost:44336/ProductAPI/DeleteProduct?id=" + id,
                "method": "POST",
                "timeout": 0,
            };

            $.ajax(settings).done(function (product) {
                $(e).parent().parent().remove();
                let template = ShowAlertMessage("alert-success", "Success", `Successfully deleted Product with name ${product.Name}`);
                $("body").append(template);
            }).fail(function () {
                let template = ShowAlertMessage("alert-danger", "Fail", "Can not delete product server issues...");
                $("body").append(template);
            });

        }


        function onEditProductHandler(e, id) {

            var settings = {
                "url": "https://localhost:44336/ProductAPI/GetProductById?id=" + id,
                "method": "GET",
                "timeout": 0,
            };

            $.ajax(settings).done(function (product) {
                console.log(product);
                
                $("#EditproductName").val(product.Name);
                $("#EditproductPrice").val(product.Price);
                $("#EditproductQuantity").val(product.Quantity);
                $("#EditProductId").val(product.Id);


                $('#EditModal').modal('show');
            }).fail(function () {
                ShowAlertMessage("alert-danger", "Fail!", "Unable to Get product Details... Server Problem ...");
            });
        }

        $("#Editform").on("submit", function onEditFormProductHandler(event) {
            event.preventDefault();
            $("#Editform").off("submit", onEditFormProductHandler);
            $("#Editform").find("#EditFormBtn").attr('disabled', true);
            let name = $("#EditproductName").val();
            let price = $("#EditproductPrice").val();
            let quantity = $("#EditproductQuantity").val();
            let id = $("#EditProductId").val();

            let product = { name, price, quantity };

            console.log(product);

            let requestObject = JSON.stringify(product);

            var settings = {
                "url": "https://localhost:44336/ProductAPI/UpdateProduct?id="+id,
                "method": "POST",
                "timeout": 0,
                "headers": {
                    "Content-Type": "application/json"
                },
                "data": requestObject
            };

            $.ajax(settings).done(function (response) {
                $("#Editform").on("submit", onEditFormProductHandler);
                $('#EditModal').modal('hide');
                onLoadDataHandler();
                $("#Editform").find("#EditFormBtn").attr('disabled', false);
            }).fail(function (){
                ShowAlertMessage("alert-danger", "Fail!", "Unable to edit product ...server...issues");
                $("#Editform").on("submit", onCreateProductHandler);
                $("#Editform").find("#EditFormBtn").attr('disabled', false);
            });

            //let settings = {
            //    url: "https://localhost:44336/ProductAPI/CreateProduct",
            //    method: "POST",
            //    timeout: 0,
            //    headers: {
            //        "Content-Type": "application/json"
            //    },
            //    data: requestObject //json....,
            //};

            //$.ajax(settings).done(function (product) {
            //    // give again the abilty to press submit button
            //    $("#form").on("submit", onCreateProductHandler);
            //    $('#CreateModal').modal('hide');
            //    onLoadDataHandler();
            //    let template = ShowAlertMessage("alert-success", "Success", `You have successfully created product with name ${product.Name}`);
            //    $("body").append(template);
            //    $("#form").find("#createFormBtn").attr('disabled', false);
            //}).fail(function () {
            //    let template = ShowAlertMessage("alert-danger", "Fail!", "Unable to create product ...server...issues");
            //    $("body").append(template);
            //    $("#form").on("submit", onCreateProductHandler);
            //    $("#form").find("#createFormBtn").attr('disabled', false);
            //});

        })





        function LoadSpinner() {
            let template = `<div class="spinner-border"></div>`;
            $("table > tbody").html(template);

        }

        function ShowAlertMessage(status, title, message) {
            let template = `
                                             <div class="alert ${status} alert-dismissible">
                                                <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                                                <strong>${title}</strong> ${message}
                                            </div>
                                            `;
            $("body").append(template);
        }


        function ClearForm() {
            $("#productName").val("");
            $("#productPrice").val("");
            $("#productQuantity").val("");

        }




    </script>

}